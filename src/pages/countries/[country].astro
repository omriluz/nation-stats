---
import countries from "../../../countries_new.json"
import Header from "../../components/Header.astro"
import Layout from "../../layouts/Layout.astro"
import Icon from "astro-icon"

export function getStaticPaths() {
  return countries.map(country => {
    return {
      params: {
        country: country.name.common,
      },
    }
  })
}

const { country } = Astro.params
const selectedCountry = countries.find(
  ({ name }: any) => name.common === country
)
---

<Layout title={`Nation Stats For ${country}`}>
  <main>
    <Header />
    <section class="max-w-7xl mx-auto -mt-48 relative z-40">
      <div class="max-w-[40rem] relative mx-auto">
        <div>
        <a
          href="/"
          class="absolute transition-all duration-300 -top-[6rem] rounded-full p-2 bg-gray-800 hover:bg-gray-600 text-white font-semibold"
        >
          <Icon name="mdi:chevron-left" class="h-6 w-6" />
        </a>
        {
          selectedCountry && (
            <h1
              id="title"
              class="text-3xl font-bold opacity-0 absolute top-0 transition-all duration-500"
            >
              {selectedCountry.name.common}
            </h1>
          )
        }
        {
          selectedCountry && (
            <img
              class="w-full h-80"
              transition:name={`flag-of-${selectedCountry?.name.common}`}
              src={selectedCountry.flags.png}
            />
          )
        }

        {
          selectedCountry && (
            <>
              <ul
                class="font-bold opacity-0 mt-10 bg-white/60 py-2 px-4 rounded-lg space-y-4 transition-opacity duration-500"
                id="country-info"
              >
                <li>Region: {selectedCountry.region}</li>
                <li>
                  Capital:{" "}
                  {selectedCountry?.capital ? selectedCountry?.capital[0] : ""}
                </li>
                <li>
                  Population:{" "}
                  {new Intl.NumberFormat().format(selectedCountry?.population)}
                </li>
                <li>
                  Size
                  {new Intl.NumberFormat().format(selectedCountry?.area)} Km
                  <sup>2</sup>
                </li>
                <li class="flex gap-4">
                  Language:{" "}
                  {selectedCountry?.languages &&
                    new Intl.ListFormat().format(
                      Object.values(selectedCountry?.languages)
                    )}
                </li>
                <li class="flex gap-4">
                  Currency:{" "}
                  {selectedCountry?.currencies &&
                    Object.values(selectedCountry.currencies).map(value => (
                      <span>{value.name}</span>
                    ))}
                </li>
              </ul>
              <iframe
                src={`https://maps.google.com/maps?q=${selectedCountry.latlng[0]},${selectedCountry.latlng[1]}&hl=es&z=5&amp;output=embed`}
                class="my-6 hidden"
                width="100%"
                height="450"
                style="border:0;"
                allowfullscreen=""
                loading="lazy"
                referrerpolicy="no-referrer-when-downgrade"
              />
            </>
          )
        }
        </div>
        <div class="flex flex-col gap-4 mt-4">
          <h2 class="text-3xl font-bold">Recommended Countries</h2>
          <div class="flex flex-col gap-4 "></div>
          {
            countries
              .filter(
                country => country.name.common !== selectedCountry?.name.common
              )
              .sort(() => 0.5 - Math.random())
              .slice(0, 4)
              .map(({ name, flags }) => (
                <a href={`/countries/${name.common}`}>
                  <img
                    transition:name={`flag-of-${name.common}`}
                    class="w-full h-80"
                    src={flags.png}
                  />
                </a>
              ))
          }
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  document.addEventListener("astro:page-load", () => {
    // This only runs once.
    const pageTitle = document.getElementById("title")
    const countryInfo = document.getElementById("country-info")
    setTimeout(() => {
      if (pageTitle) {
        pageTitle.style.opacity = "100"
        pageTitle.style.top = "-3rem"
      }
    }, 25)

    setTimeout(() => {
      if (countryInfo) {
        countryInfo.style.opacity = "100"
      }
    }, 200)
  })
</script>
